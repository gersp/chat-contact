openapi: 3.0.0
info:
  title: ChatContext API
  version: 0.0.0

paths:
  # *******************************************************************************
  #                           Admin
  # *******************************************************************************
  /api/counters:
    get:
      summary: GetCounters
      operationId: getCounters
      tags:
        - AdminData
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatData'

  /api/user:
    get:
      summary: ListUserForms
      operationId: listUsers
      tags:
        - AdminData
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserData'
    post:
      operationId: createUser
      tags:
        - AdminData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserData'
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'

  /api/user/{userId}/matching:
    get:
      operationId: getMatching
      tags:
        - AdminData
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchRequestData'
    post:
      operationId: startMatching
      tags:
        - AdminData
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchRequestData'
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchRequestData'

  /api/user/{userId}/matching/{matchRequestId}/candidates:
    get:
      operationId: getMatchingCandidates
      tags:
        - AdminData
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/matchRequestId'
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CandidateData'

# *******************************************************************************
#                           Components
# *******************************************************************************

components:
  parameters:
    userId:
      name: userId
      in: path
      description: User identifier.
      required: true
      schema:
        type: integer
        format: int64
    matchRequestId:
      name: matchRequestId
      in: path
      description: matchRequest identifier.
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    StatData:
      properties:
        countForms:
          type: integer
          format: int64
        countMathes:
          type: integer
          format: int64

    UserData:
      properties:
        userId:
          type: integer
          format: int64
        displayName:
          type: string
        imageLink:
          type: string
        interestsText:
          type: string

    MatchRequestData:
      properties:
        matchRequestId:
          type: integer
          format: int64
        topicText:
          type: string
        timeRange:
          $ref: "#/components/schemas/TimeRestrictionData"

    TimeRestrictionData:
      properties:
        morning:
          type: boolean
        daytime:
          type: boolean
        evening:
          type: boolean
        night:
          type: boolean
        weekends:
          type: boolean



    CandidateData:
      properties:
        user:
          $ref: "#/components/schemas/UserData"
        weight:
          type: number
          format: double
        status:
          $ref: "#/components/schemas/MatchStatusType"
        contraStatus:
          $ref: "#/components/schemas/MatchStatusType"

    MatchResultData:
      properties:
        matchStatus:
          $ref: "#/components/schemas/MatchStatusType"
        matchLink:
          type: string

    MatchStatusType:
      type: string
      enum:
        - shown
        - liked
        - disliked
        - contactDirectly
        - contactOnline

